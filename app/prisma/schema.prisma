generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Hosts {
  rigId        String          @unique @default(uuid())
  hostname     String          @id
  groupId      String?
  created_at   DateTime        @default(now())
  last_updated DateTime        @updatedAt
  variables    HostVariables?
  software     HostSoftware?
  baseline     HostBaseline?
  group        GroupBaseline?  @relation(fields: [groupId], references: [groupId])
  logs         ExecutionLogs[]
}

model HostVariables {
  host        Hosts   @relation(fields: [hostId], references: [hostname])
  hostId      String  @id
  rigName     String  @unique
  modelYear   Int?
  model       String?
  vin         String? @unique
  intrepid    Int?    @unique
  niHostname  String? @unique
  rigType     String?
  testUser    String?
  agent       String?
  installUser String?
}

model HostSoftware {
  host           Hosts   @relation(fields: [hostId], references: [hostname])
  hostId         String  @id
  assetBridge    String?
  gcpUploader    String?
  cssLaunch      String?
  corvus         String?
  corvusParallel String?
  vehicleSpy     String?
  jlrSDK         String?
}

model HostBaseline {
  host           Hosts   @relation(fields: [hostId], references: [hostname])
  hostId         String  @id
  assetBridge    String?
  gcpUploader    String?
  cssLaunch      String?
  corvus         String?
  corvusParallel String?
  vehicleSpy     String?
  jlrSDK         String?
}

model GroupBaseline {
  hosts          Hosts[]
  groupId        String  @id
  assetBridge    String?
  gcpUploader    String?
  cssLaunch      String?
  corvus         String?
  corvusParallel String?
  vehicleSpy     String?
  jlrSDK         String?
}

model ExecutionLogs {
  executionID        String               @id @default(uuid())
  playbook           String
  status             String
  started            DateTime
  ended              DateTime
  hostId             String
  software           String
  task               String
  targetHost         Hosts                @relation(fields: [hostId], references: [hostname])
  // SoftwareExecutions SoftwareExecutions[]
}

// model SoftwareExecutions {
//   taskID      String        @id @default(uuid())
//   task        String
//   status      String
//   started     DateTime
//   ended       DateTime
//   software    String
//   executionID String
//   execution   ExecutionLogs @relation(fields: [executionID], references: [executionID])
// }
